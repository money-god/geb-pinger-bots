org: reflexer
app: geb-pinger-bots
service: geb-pinger-bots

provider:
  name: aws
  runtime: nodejs12.x
  region: 'us-west-1'
  environment: ${self:custom.${opt:stage, 'test'}}

custom:
  # Redirect to either prod or test conf below
  kovan: ${self:custom.prod}
  mainnet: ${self:custom.prod}

  # Default env var for local testing
  test:
    ETH_RPC: http://localhost:8545/
    ACCOUNTS_PASSPHRASE: age wish praise cinnamon pelican target early popular bitter sadness uncle smoke female scorpion cat sweet soldier robot pepper poet fat recycle crater such
    MEDIANIZER_ETH_ADDRESS: '0x0'
    MEDIANIZER_RAI_ADDRESS: '0x0'
    MEDIANIZER_FLX_ADDRESS: '0x0'
    FSM_ETH_ADDRESS: '0x0'
    FSM_RAI_ADDRESS: '0x0'
    FSM_FLX_ADDRESS: '0x0'
    ORACLE_RELAYER_ADDRESS: '0x0'
    TAX_COLLECTOR_ADDRESS: '0x0'
    MIN_ETH_BALANCE: '500000000000000000'
    REWARD_RECEIVER: '0x0'

  # Fetch env vars from severless dashboard (depends on stage, either kovan or mainnet)
  prod:
    ETH_RPC: ${param:ETH_RPC, self:custom.test.ETH_RPC}
    ACCOUNTS_PASSPHRASE: ${param:ACCOUNTS_PASSPHRASE}
    MEDIANIZER_ETH_ADDRESS: ${param:MEDIANIZER_ETH_ADDRESS}
    MEDIANIZER_RAI_ADDRESS: ${param:MEDIANIZER_RAI_ADDRESS}
    MEDIANIZER_FLX_ADDRESS: ${param:MEDIANIZER_FLX_ADDRESS}
    FSM_ETH_ADDRESS: ${param:FSM_ETH_ADDRESS}
    FSM_RAI_ADDRESS: ${param:FSM_RAI_ADDRESS}
    FSM_FLX_ADDRESS: ${param:FSM_FLX_ADDRESS}
    ORACLE_RELAYER_ADDRESS: ${param:ORACLE_RELAYER_ADDRESS}
    TAX_COLLECTOR_ADDRESS: ${param:TAX_COLLECTOR_ADDRESS}
    RATE_SETTER_ADDRESS: ${param:RATE_SETTER_ADDRESS}
    MIN_ETH_BALANCE: ${param:MIN_ETH_BALANCE, self:custom.test.MIN_ETH_BALANCE}
    REWARD_RECEIVER: ${param:REWARD_RECEIVER, ''}
    SCHEDULER_INTERVAL_ETH_MEDIAN: ${param:SCHEDULER_INTERVAL_ETH_MEDIAN, param:SCHEDULER_INTERVAL_DEFAULT, 20}
    SCHEDULER_INTERVAL_RAI_MEDIAN: ${param:SCHEDULER_INTERVAL_RAI_MEDIAN, param:SCHEDULER_INTERVAL_DEFAULT, 20}
    SCHEDULER_INTERVAL_ETH_FSM: ${param:SCHEDULER_INTERVAL_ETH_FSM, param:SCHEDULER_INTERVAL_DEFAULT, 20}
    SCHEDULER_INTERVAL_RAI_FSM: ${param:SCHEDULER_INTERVAL_RAI_FSM, param:SCHEDULER_INTERVAL_DEFAULT, 20}
    MAX_LIVENESS_DELAY: ${param:MAX_LIVENESS_DELAY, 10}
    SLACK_HOOK_URL: ${param:SLACK_HOOK_URL, ''}
    TWILIO_AUTH_TOKEN: ${param:TWILIO_AUTH_TOKEN, ''}
    TWILIO_SEND_NUMBER: ${param:TWILIO_SEND_NUMBER, ''}
    TWILIO_SID: ${param:TWILIO_SID, ''}
    PHONE_NOTIFICATION_RECEIVER: ${param:PHONE_NOTIFICATION_RECEIVER, '[]'}
    DS_PAUSE_ADDRESS: ${param:DS_PAUSE_ADDRESS}
    GEB_SUBGRAPH_URL: ${param:GEB_SUBGRAPH_URL}

plugins:
  - serverless-plugin-typescript
  - serverless-offline

functions:
  updateChainlinkETHMedianizer:
    handler: src/index.updateChainlinkETHMedianizer
    timeout: 240
    events:
      - schedule: rate(${param:SCHEDULER_INTERVAL_ETH_MEDIAN, param:SCHEDULER_INTERVAL_DEFAULT, 20} minutes)

  updateUniswapRAIMedianizer:
    handler: src/index.updateUniswapRAIMedianizer
    timeout: 240
    events:
      - schedule: rate(${param:SCHEDULER_INTERVAL_RAI_MEDIAN, param:SCHEDULER_INTERVAL_DEFAULT, 20} minutes)

  updateETHFsm:
    handler: src/index.updateETHFsm
    timeout: 240
    events:
      - schedule: rate(${param:SCHEDULER_INTERVAL_ETH_FSM, param:SCHEDULER_INTERVAL_DEFAULT, 20} minutes)

  updateRAIFsm:
    handler: src/index.updateRAIFsm
    timeout: 240
    events:
      - schedule: rate(${param:SCHEDULER_INTERVAL_RAI_FSM, param:SCHEDULER_INTERVAL_DEFAULT, 20} minutes)

  updateTaxCollector:
    handler: src/index.updateTaxCollector
    timeout: 240
    events:
      - schedule: rate(${param:SCHEDULER_INTERVAL_TAX_COLLECTOR, param:SCHEDULER_INTERVAL_DEFAULT, 20} minutes)

  pauseExecutor:
    handler: src/index.pauseExecutor
    timeout: 240
    events:
      - schedule: rate(${param:SCHEDULER_PAUSE_EXECUTOR, param:SCHEDULER_INTERVAL_DEFAULT, 20} minutes)

  balanceChecker:
    handler: src/index.balanceChecker
    timeout: 240
    events:
      - schedule: rate(${param:SCHEDULER_INTERVAL_BALANCE, param:SCHEDULER_INTERVAL_DEFAULT, 20} minutes)

  livenessChecker:
    handler: src/index.livenessChecker
    timeout: 240
    events:
      - schedule: rate(${param:SCHEDULER_INTERVAL_LIVENESS, param:SCHEDULER_INTERVAL_DEFAULT, 20} minutes)
